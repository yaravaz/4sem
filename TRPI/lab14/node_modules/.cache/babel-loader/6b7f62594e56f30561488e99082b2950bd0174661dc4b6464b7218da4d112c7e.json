{"ast":null,"code":"import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\nconst getVisibleTodos = (todos, filter, text) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    case VisibilityFilters.SHOW_FINDED:\n      return todos.filter(t => {\n        t.text.includes(text);\n        console.log(text);\n      });\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter, state.text)\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"names":["connect","toggleTodo","TodoList","VisibilityFilters","getVisibleTodos","todos","filter","text","SHOW_ALL","SHOW_COMPLETED","t","completed","SHOW_ACTIVE","SHOW_FINDED","includes","console","log","Error","mapStateToProps","state","visibilityFilter","mapDispatchToProps","dispatch","id"],"sources":["D:/лабы/ТРПИ/lab14/src/containers/VisibleTodoList.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { toggleTodo } from '../actions';\r\nimport TodoList from '../components/TodoList';\r\nimport { VisibilityFilters } from '../actions';\r\n\r\nconst getVisibleTodos = (todos, filter, text) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter((t) => t.completed);\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter((t) => !t.completed);\r\n    case VisibilityFilters.SHOW_FINDED:\r\n      return todos.filter((t) => {t.text.includes(text); console.log(text)})\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: getVisibleTodos(\r\n    state.todos,\r\n    state.visibilityFilter,\r\n    state.text,\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTodo: (id) => dispatch(toggleTodo(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,YAAY;AAE9C,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,EAAEC,IAAI,KAAK;EAC/C,QAAQD,MAAM;IACZ,KAAKH,iBAAiB,CAACK,QAAQ;MAC7B,OAAOH,KAAK;IACd,KAAKF,iBAAiB,CAACM,cAAc;MACnC,OAAOJ,KAAK,CAACC,MAAM,CAAEI,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC;IACzC,KAAKR,iBAAiB,CAACS,WAAW;MAChC,OAAOP,KAAK,CAACC,MAAM,CAAEI,CAAC,IAAK,CAACA,CAAC,CAACC,SAAS,CAAC;IAC1C,KAAKR,iBAAiB,CAACU,WAAW;MAChC,OAAOR,KAAK,CAACC,MAAM,CAAEI,CAAC,IAAK;QAACA,CAAC,CAACH,IAAI,CAACO,QAAQ,CAACP,IAAI,CAAC;QAAEQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;MAAA,CAAC,CAAC;IACxE;MACE,MAAM,IAAIU,KAAK,CAAC,kBAAkB,GAAGX,MAAM,CAAC;EAChD;AACF,CAAC;AAED,MAAMY,eAAe,GAAIC,KAAK,KAAM;EAClCd,KAAK,EAAED,eAAe,CACpBe,KAAK,CAACd,KAAK,EACXc,KAAK,CAACC,gBAAgB,EACtBD,KAAK,CAACZ,IACR;AACF,CAAC,CAAC;AAEF,MAAMc,kBAAkB,GAAIC,QAAQ,KAAM;EACxCrB,UAAU,EAAGsB,EAAE,IAAKD,QAAQ,CAACrB,UAAU,CAACsB,EAAE,CAAC;AAC7C,CAAC,CAAC;AAEF,eAAevB,OAAO,CACpBkB,eAAe,EACfG,kBACF,CAAC,CAACnB,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
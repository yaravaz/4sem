{"ast":null,"code":"import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    case VisibilityFilters.SHOW_FINDED:\n      return todos.filter(t => t.finded);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"names":["connect","toggleTodo","TodoList","VisibilityFilters","getVisibleTodos","todos","filter","SHOW_ALL","SHOW_COMPLETED","t","completed","SHOW_ACTIVE","SHOW_FINDED","finded","Error","mapStateToProps","state","visibilityFilter","mapDispatchToProps","dispatch","id"],"sources":["D:/лабы/ТРПИ/lab14/src/containers/VisibleTodoList.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { toggleTodo } from '../actions';\r\nimport TodoList from '../components/TodoList';\r\nimport { VisibilityFilters } from '../actions';\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_ALL:\r\n      return todos;\r\n    case VisibilityFilters.SHOW_COMPLETED:\r\n      return todos.filter((t) => t.completed);\r\n    case VisibilityFilters.SHOW_ACTIVE:\r\n      return todos.filter((t) => !t.completed);\r\n    case VisibilityFilters.SHOW_FINDED:\r\n      return todos.filter((t) => t.finded);\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todos: getVisibleTodos(\r\n    state.todos,\r\n    state.visibilityFilter\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleTodo: (id) => dispatch(toggleTodo(id)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);"],"mappings":"AAAA,SAASA,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,iBAAiB,QAAQ,YAAY;AAE9C,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACzC,QAAQA,MAAM;IACZ,KAAKH,iBAAiB,CAACI,QAAQ;MAC7B,OAAOF,KAAK;IACd,KAAKF,iBAAiB,CAACK,cAAc;MACnC,OAAOH,KAAK,CAACC,MAAM,CAAEG,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC;IACzC,KAAKP,iBAAiB,CAACQ,WAAW;MAChC,OAAON,KAAK,CAACC,MAAM,CAAEG,CAAC,IAAK,CAACA,CAAC,CAACC,SAAS,CAAC;IAC1C,KAAKP,iBAAiB,CAACS,WAAW;MAChC,OAAOP,KAAK,CAACC,MAAM,CAAEG,CAAC,IAAKA,CAAC,CAACI,MAAM,CAAC;IACtC;MACE,MAAM,IAAIC,KAAK,CAAC,kBAAkB,GAAGR,MAAM,CAAC;EAChD;AACF,CAAC;AAED,MAAMS,eAAe,GAAIC,KAAK,KAAM;EAClCX,KAAK,EAAED,eAAe,CACpBY,KAAK,CAACX,KAAK,EACXW,KAAK,CAACC,gBACR;AACF,CAAC,CAAC;AAEF,MAAMC,kBAAkB,GAAIC,QAAQ,KAAM;EACxClB,UAAU,EAAGmB,EAAE,IAAKD,QAAQ,CAAClB,UAAU,CAACmB,EAAE,CAAC;AAC7C,CAAC,CAAC;AAEF,eAAepB,OAAO,CACpBe,eAAe,EACfG,kBACF,CAAC,CAAChB,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
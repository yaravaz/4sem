{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u043B\\u0430\\u0431\\u044B\\\\TRPI\\\\lab14\\\\src\\\\containers\\\\SearchTodo.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { searchTodo, setVisibilityFilter, VisibilityFilters } from '../actions';\nimport './SearchTodo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchTodo = ({\n  dispatch\n}) => {\n  let input;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textTodo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n          dispatch(setVisibilityFilter(VisibilityFilters.SHOW_ALL));\n        } else {\n          dispatch(searchTodo(VisibilityFilters.SHOW_FINDED, input.value));\n        }\n        input.value = '';\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"newbar\",\n        ref: node => input = node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search\",\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = SearchTodo;\nexport default connect()(SearchTodo);\nvar _c;\n$RefreshReg$(_c, \"SearchTodo\");","map":{"version":3,"names":["React","connect","searchTodo","setVisibilityFilter","VisibilityFilters","jsxDEV","_jsxDEV","SearchTodo","dispatch","input","className","children","onSubmit","e","preventDefault","value","trim","SHOW_ALL","SHOW_FINDED","ref","node","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["D:/лабы/TRPI/lab14/src/containers/SearchTodo.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchTodo, setVisibilityFilter, VisibilityFilters } from '../actions';\r\nimport './SearchTodo.css';\r\n\r\nconst SearchTodo = ({ dispatch }) => {\r\n  let input;\r\n\r\n  return (\r\n    <div className='textTodo'>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          if (!input.value.trim()) {\r\n            dispatch(setVisibilityFilter(VisibilityFilters.SHOW_ALL));\r\n          } else {\r\n            dispatch(searchTodo(VisibilityFilters.SHOW_FINDED, input.value));\r\n          }\r\n          input.value = '';\r\n        }}\r\n      >\r\n        <input className='newbar' ref={(node) => (input = node)} />\r\n        <button className='search' type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default connect()(SearchTodo);"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,EAAEC,mBAAmB,EAAEC,iBAAiB,QAAQ,YAAY;AAC/E,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC,IAAIC,KAAK;EAET,oBACEH,OAAA;IAAKI,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBL,OAAA;MACEM,QAAQ,EAAGC,CAAC,IAAK;QACfA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB,IAAI,CAACL,KAAK,CAACM,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;UACvBR,QAAQ,CAACL,mBAAmB,CAACC,iBAAiB,CAACa,QAAQ,CAAC,CAAC;QAC3D,CAAC,MAAM;UACLT,QAAQ,CAACN,UAAU,CAACE,iBAAiB,CAACc,WAAW,EAAET,KAAK,CAACM,KAAK,CAAC,CAAC;QAClE;QACAN,KAAK,CAACM,KAAK,GAAG,EAAE;MAClB,CAAE;MAAAJ,QAAA,gBAEFL,OAAA;QAAOI,SAAS,EAAC,QAAQ;QAACS,GAAG,EAAGC,IAAI,IAAMX,KAAK,GAAGW;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3DlB,OAAA;QAAQI,SAAS,EAAC,QAAQ;QAACe,IAAI,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACE,EAAA,GArBInB,UAAU;AAsBhB,eAAeN,OAAO,CAAC,CAAC,CAACM,UAAU,CAAC;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
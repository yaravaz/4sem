
USE UNIVER;

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT

-----------------------------------------------------------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY ROLLUP (GROUPS.PROFESSION, PROGRESS.SUBJECT);

----------------------------------------------------------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT WITH CUBE;

-----------------------------------------------------------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT
	UNION
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ХТиТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT

----------------------------------------------------------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT
	UNION ALL
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ХТиТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT

---------------------------------------------------------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT
	INTERSECT
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ХТиТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT

----------------------------------------------------------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT
	EXCEPT
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ХТиТ'
GROUP BY GROUPS.PROFESSION, PROGRESS.SUBJECT

---------------------------------------------------------------

USE V_MyBASE

SELECT ЗАКАЗЫ.Товар,
	   ROUND(AVG(CAST(ЗАКАЗЫ.Количество AS FLOAT(4))),2)[Среднее количество]
FROM ЗАКАЗЫ 
WHERE ЗАКАЗЫ.Вид_доставки IN ('курьер','почта')
GROUP BY ЗАКАЗЫ.Товар

----------------------------------------------------------------

SELECT ЗАКАЗЫ.Товар,
	   ROUND(AVG(CAST(ЗАКАЗЫ.Количество AS FLOAT(4))),2)[Среднее количество]
FROM ЗАКАЗЫ 
WHERE ЗАКАЗЫ.Вид_доставки IN ('курьер','почта')
GROUP BY ROLLUP (ЗАКАЗЫ.Товар)

----------------------------------------------------------------

SELECT ЗАКАЗЫ.Товар,
	   ROUND(AVG(CAST(ЗАКАЗЫ.Количество AS FLOAT(4))),2)[Среднее количество]
FROM ЗАКАЗЫ 
WHERE ЗАКАЗЫ.Вид_доставки IN ('курьер','почта')
GROUP BY ЗАКАЗЫ.Товар WITH CUBE

----------------------------------------------------------------

SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена < 200
	UNION
SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена < 500

---------------------------------------------------------------

SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена < 200
	UNION ALL
SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена < 500

---------------------------------------------------------------


SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена > 100
	INTERSECT
SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена < 500

--------------------------------------------------------------

SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена > 100
	EXCEPT
SELECT ТОВАРЫ.Наименование_товара, ТОВАРЫ.Цена
FROM ТОВАРЫ WHERE ТОВАРЫ.Цена < 300

-------------------------------------------------------------

USE UNIVER

SELECT FACULTY.FACULTY AS Факультет, GROUPS.IDGROUP AS Группа, COUNT(STUDENT.IDSTUDENT) AS Количество_студентов
FROM
  STUDENT
  INNER JOIN GROUPS ON STUDENT.IDGROUP = GROUPS.IDGROUP
  INNER JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
GROUP BY FACULTY.FACULTY, GROUPS.IDGROUP WITH ROLLUP;

-------------------------------------------------------------

SELECT AUDITORIUM.AUDITORIUM_TYPE, AUDITORIUM.AUDITORIUM_CAPACITY, COUNT(*)[Количество]
FROM AUDITORIUM
GROUP BY AUDITORIUM.AUDITORIUM_TYPE, AUDITORIUM.AUDITORIUM_CAPACITY WITH CUBE